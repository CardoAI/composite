name: "Scan Image"
description: "This action scans an image"
inputs:
  aws-region:
    description: "AWS Inspector scan region"
    default: eu-central-1
  image-tag:
    description: "Image tag"
    required: true
  falcon-client-id:
    description: "Falcon Client ID"
    required: true
  falcon-client-secret:
    description: "Falcon Client Secret"
    required: true

runs:
  using: composite
  steps:
    - name: Set up AWS credentials
      shell: bash
      run: |
        aws configure export-credentials --format env-no-export >> $GITHUB_ENV
        echo "AWS_REGION=${{ inputs.aws-region }}" >> $GITHUB_ENV

    - name: Split image-tag into container repository and tag
      shell: bash
      run: |
        # Split the image tag based on the colon (:) delimiter
        image_tag="${{ inputs.image-tag }}"   # Get the image tag passed from the matrix
        container_repo=$(echo "$image_tag" | cut -d':' -f1)  # First part before the colon
        tag=$(echo "$image_tag" | cut -d':' -f2)               # Second part after the colon

        echo "Container repository: $container_repo"
        echo "Image tag: $tag"

        # Set them as GitHub environment variables for use in further steps
        echo "CONTAINER_REPO=$container_repo" >> $GITHUB_ENV
        echo "IMAGE_TAG=$tag" >> $GITHUB_ENV

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"

    - name: CrowdStrike Container Image Scan
      uses: crowdstrike/container-image-scan-action@v1.1.0
      env:
        FALCON_CLIENT_ID: "${{ inputs.falcon-client-id }}"
        FALCON_CLIENT_SECRET: "${{ inputs.falcon-client-secret }}"
        FALCON_CLOUD_REGION: "${{ inputs.aws-region }}"
        CONTAINER_REPO: "${{ env.CONTAINER_REPO }}"
        CONTAINER_TAG: "${{ env.IMAGE_TAG }}"
