name: "build tag and push image"
description: "This action build tag and push image"
inputs:
  ECR_REGISTRY:
    required: true
    description: "ECR registry"
  service:
    description: "service to build"
    required: true
  location:
    description: "location of dockerfile"
    required: true
  arguments:
    description: "build arguments"
    required: false

runs:
  using: composite
  steps:
    - name: Build, tag, and push image to Amazon ECR
      id: build-image-sha
      shell: bash
      run: |
        docker --version
        echo "${{ inputs.arguments }}"
        echo "echo ${{env.ECR_REGISTRY}}/${{ inputs.service }}:${GITHUB_REF#refs/heads/}"
        docker build -f ${{ inputs.location }} . --cache-from ${{env.ECR_REGISTRY}}/${{ inputs.service }}:${GITHUB_REF#refs/heads/} -t ${{env.ECR_REGISTRY}}/${{ inputs.service }}:${GITHUB_REF#refs/heads/} ${{ inputs.arguments }} --build-arg BUILDKIT_INLINE_CACHE=1
        docker push ${{env.ECR_REGISTRY}}/${{ inputs.service }}:${GITHUB_REF#refs/heads/}
        image_tag="${{ env.ECR_REGISTRY }}/${{ inputs.service }}:${GITHUB_REF#refs/heads/}"
        echo "Computed image_tag: $image_tag"
        echo "image-tag=$image_tag" >> $GITHUB_OUTPUT
    - name: Remove untagged docker images
      id: remove-untagged-images
      shell: bash
      run: docker image prune -af
outputs:
  image-tag:
    description: "image tag"
    value: ${{ steps.build-image-sha.outputs.image-tag }}
