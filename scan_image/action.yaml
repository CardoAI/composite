name: "Scan Image"
description: "This action scans an image"
inputs:
  service:
    description: "Service name"
    required: true
    default: artifact
  aws-region:
    description: "AWS Inspector scan region"
    required: true
    default: eu-central-1
  image-tag:
    description: "Image tag"
    required: true
  display-vulnerability-findings:
    description: "Display Vulnerability Findings"
    required: true
    default: "enabled"
  critical-threshold:
    required: true
    description: "Critical threshold during scan"
    default: "2"
  high-threshold:
    required: true
    description: "High threshold during scan"
    default: "0"
  medium-threshold:
    required: true
    description: "Medium threshold during scan"
    default: "0"
  low-threshold:
    required: true
    description: "Low threshold during scan"
    default: "0"
  other-threshold:
    required: true
    description: "Other threshold during scan"
    default: "0"

runs:
  using: composite
  steps:
    - name: Set up AWS credentials
      shell: bash
      run: |
        aws configure export-credentials --format env-no-export >> $GITHUB_ENV
        echo "AWS_REGION=${{ inputs.aws-region }}" >> $GITHUB_ENV

    - name: Inspector Scan
      id: inspector
      #uses: aws-actions/vulnerability-scan-github-action-for-amazon-inspector@v1.2.0
      uses: CardoAI/composite/vulnerability-scan-github-action-for-amazon-inspector@main
      with:
        # Image was built from above composite so it is not rebuilt every time
        scan_image: 686474074286.dkr.ecr.eu-central-1.amazonaws.com/cardo-tools:scan-image

        artifact_type: "container"
        artifact_path: ${{ inputs.image-tag }}
        display_vulnerability_findings: ${{ inputs.display-vulnerability-findings }}
        critical_threshold: ${{ inputs.critical-threshold }}
        high_threshold: ${{ inputs.high-threshold }}
        medium_threshold: ${{ inputs.medium-threshold }}
        low_threshold: ${{ inputs.low-threshold }}
        other_threshold: ${{ inputs.other-threshold }}

    - name: Check vulnerability threshold
      shell: bash
      run: |
        if [ ${{ steps.inspector.outputs.vulnerability_threshold_exceeded }} -eq 1 ]; then
          echo "Vulnerability threshold exceeded. Failing the job."
          exit 1
        else
          echo "Vulnerability threshold not exceeded. Continuing."
        fi
